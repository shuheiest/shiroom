version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: shiroom-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - UPLOAD_DIR=/app/uploads
      - SANITIZED_DIR=/app/sanitized
      - MAX_FILE_SIZE=52428800
      - LOG_LEVEL=info
    volumes:
      - uploads:/app/uploads
      - sanitized:/app/sanitized
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - shiroom-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

  db:
    image: postgres:15-alpine
    container_name: shiroom-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-shiroom}
      - POSTGRES_USER=${POSTGRES_USER:-shiroom}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-shiroom123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - shiroom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-shiroom} -d ${POSTGRES_DB:-shiroom}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: shiroom-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - shiroom-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M

volumes:
  postgres_data:
    driver: local
  uploads:
    driver: local
  sanitized:
    driver: local

networks:
  shiroom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16